({
    handleClick : function(component, event, helper) {
        
        var actions = [  
            { label: 'Edit', name: 'edit' },
            { label: 'Delete', name: 'delete' } ];
        var accountName = component.get('v.AccountName');
        var action = component.get("c.fetchContact");
        action.setParams({ 'searchString' : accountName });
        action.setCallback(this, function(response) { 
            var state = response.getState(); 
            if (state === "SUCCESS") {
                component.set('v.columns', [
                    { label: 'Id', fieldName: 'Id', type: 'text' },
                    { label: 'Contact Name', fieldName: 'Name', type: 'text'},
                    { label: 'Phone', fieldName: 'Phone', type: 'text'},
                    { label: 'Email', fieldName: 'Email', type: 'text'},
                    { label: 'Row Action',type: 'action',fieldName: 'Action', typeAttributes: { rowActions: actions } }
                ]);
                var returnValue =response.getReturnValue();
                if(returnValue == '' ||returnValue == null || returnValue == undefined){
                    component.set("v.truthy", false);
                    component.set('v.ListContact', null);
                    var toastEvent = $A.get("e.force:showToast");
                    toastEvent.setParams({
                        title : 'Error',
                        message:'No related contact records are found',
                        duration:' 5000',
                        key: 'info_alt',
                        type: 'error',
                        mode: 'pester'
                    });
                    toastEvent.fire();
                } else {
                    component.set("v.truthy", true);
                    component.set('v.ListContact', returnValue);
                }
            }
        });
        $A.enqueueAction(action);
    },
    handleRowAction: function ( cmp, event, helper ) {
        
        var action = event.getParam('action');
        var row = event.getParam('row');
        var recId = row.Id;
        
        switch (action.name) {
            case 'edit':
                var editRecordEvent = $A.get("e.force:editRecord");
                editRecordEvent.setParams({
                    'recordId': recId
                });
                editRecordEvent.fire();
                break;
            case 'delete':
                var action1 = cmp.get("c.deleteRecord");
                action1.setParams({ 'recordId' : recId });
                action1.setCallback(this, function(response) { 
                    var toastEvent = $A.get("e.force:showToast");
                    toastEvent.setParams({
                        title : 'Success',
                        message: 'Record is deleted successfull. Kindly refresh the page',
                        duration:' 5000',
                        key: 'info_alt',
                        type: 'success',
                        mode: 'pester'
                    });
                    toastEvent.fire();
                    helper.helperMethod(cmp, event, helper)
                });
                $A.enqueueAction(action1);
                break;
        }
    }
})